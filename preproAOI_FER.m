% clear everything
clearvars;

% get a list of the files and filter out the animal files
ls_files = dir("VidStimProcessed" + filesep + "*.csv");
ls_files = regexp({ls_files.name},'[AB].*','match');
ls_files = [ls_files{:}];

% create empty progress thing
str_progress = '        |------------------------------------------------------------|';
count        = 1;

for j = 1:length(ls_files)

    % get video name
    vid = ls_files{j}(1:end-4);

    % check if this file has already been processed
    if exist(['VidStimProcessed' filesep vid '.mat'], 'file') > 0
        continue
    end
    
    % add to progress bar
    count = count + 1;
    str_progress(count,:)   = repmat(' ', 1, length(str_progress(1,:)));
    str_progress(count,1:6) = vid;
    str_progress(count,7)   = ':';
    str_progress(count,[9, end])   = '|';
    
    % read in the csv file
    tbl = readtable(['VidStimProcessed' filesep ls_files{j}]);
    
    % create empty matrix to be filled with AOI sizes
    mtx_size = nan(height(tbl),4);
    
    % create empty matrix to be filled with the matrices
    mtx_aois = nan([762, 562, height(tbl)]);
    
    for i = 1:height(tbl)

        % adjust progress bar
        x = floor(60*i/300);
        str_progress(count,10:(9+x)) = '-';
        clc;
        disp(str_progress)
    
        % take only the relevant row
        tblt = tbl(i,:);
    
        % start with fresh matrices
        mtx = zeros([762, 562]);
    
        % I adjust all the region by moving the points further out to increase
        % their size. Whenever two regions encroach on each other, I subtract 
        % one to make sure they don't overlap too much.
    
        % eye region
        x = [tblt.x_36 - abs(tblt.x_36-tblt.x_0)/2,...
             tblt.x_36 - abs(tblt.x_36-tblt.x_0)/2,...
             tblt.x_37,...
             tblt.x_38,...
             tblt.x_39 + (abs(tblt.x_39-tblt.x_27)/2 - 1),...
             tblt.x_39 + (abs(tblt.x_39-tblt.x_27)/2 - 1),...
             tblt.x_40,...
             tblt.x_41];
        y = [tblt.y_36 + (abs(tblt.y_36-tblt.y_17)/2 - 1),...
             tblt.y_36 - (abs(tblt.y_36-tblt.y_17)/2 - 1),...
             tblt.y_37 - (abs(tblt.y_37-tblt.y_19)/2 - 1),...
             tblt.y_38 - (abs(tblt.y_38-tblt.y_20)/2 - 1),...
             tblt.y_39 - (abs(tblt.y_39-tblt.y_21)/2 - 1),...
             tblt.y_39 + (abs(tblt.y_39-tblt.y_21)/2 - 1),...
             tblt.y_40 + (abs(tblt.y_38-tblt.y_20)/2 - 1),...
             tblt.y_41 + (abs(tblt.y_37-tblt.y_19)/2 - 1)];
        mtxt = coord2matrix(x, y, 0.81);
        mtx  = mtx + mtxt;
        x = [tblt.x_42 - (abs(tblt.x_42-tblt.x_27)/2 - 1),...
             tblt.x_42 - (abs(tblt.x_42-tblt.x_27)/2 - 1),...
             tblt.x_43,...
             tblt.x_44,...
             tblt.x_45 + abs(tblt.x_45-tblt.x_16)/2,...
             tblt.x_45 + abs(tblt.x_45-tblt.x_16)/2,...
             tblt.x_46,...
             tblt.x_47];
        y = [tblt.y_42 + (abs(tblt.y_42-tblt.y_22)/2 - 1),...
             tblt.y_42 - (abs(tblt.y_42-tblt.y_22)/2 - 1),...
             tblt.y_43 - (abs(tblt.y_43-tblt.y_23)/2 - 1),...
             tblt.y_44 - (abs(tblt.y_44-tblt.y_24)/2 - 1),...
             tblt.y_45 - (abs(tblt.y_45-tblt.y_26)/2 - 1),...
             tblt.y_45 + (abs(tblt.y_45-tblt.y_26)/2 - 1),...
             tblt.y_46 + (abs(tblt.y_44-tblt.y_24)/2 - 1),...
             tblt.y_47 + (abs(tblt.y_43-tblt.y_23)/2 - 1)];
        mtxt = coord2matrix(x, y, 0.81);
        mtx  = mtx + mtxt;
    
        % mouth region
        x = [tblt.x_48 - abs(tblt.x_48-tblt.x_5)/2,...
             tblt.x_49,...
             tblt.x_50,...
             tblt.x_51,...
             tblt.x_52,...
             tblt.x_53,...
             tblt.x_54 + abs(tblt.x_54-tblt.x_11)/2,...
             tblt.x_55,...
             tblt.x_56,...
             tblt.x_57,...
             tblt.x_58,...
             tblt.x_59];
        y = [tblt.y_48,...
             tblt.y_49 - (abs(tblt.y_49-tblt.y_33)/2 - 1),...
             tblt.y_50 - (abs(tblt.y_50-tblt.y_33)/2 - 1),...
             tblt.y_51 - (abs(tblt.y_51-tblt.y_33)/2 - 1),...
             tblt.y_52 - (abs(tblt.y_52-tblt.y_33)/2 - 1),...
             tblt.y_53 - (abs(tblt.y_53-tblt.y_33)/2 - 1),...
             tblt.y_54,...
             tblt.y_55 + abs(tblt.y_55-tblt.y_10)/2,...
             tblt.y_56 + abs(tblt.y_56-tblt.y_9)/2,...
             tblt.y_57 + abs(tblt.y_57-tblt.y_8)/2,...
             tblt.y_58 + abs(tblt.y_58-tblt.y_7)/2,...
             tblt.y_59 + abs(tblt.y_59-tblt.y_6)/2];
        mtxt = coord2matrix(x, y, 0.84);
        mtx  = mtx + mtxt;
    
        % nose region
        x = [tblt.x_31 - abs(tblt.x_31-tblt.x_3)/3,...
             tblt.x_32,...
             tblt.x_33,...
             tblt.x_34,...
             tblt.x_35 + abs(tblt.x_35-tblt.x_13)/3,...
             tblt.x_28];
        y = [tblt.y_31,...
             tblt.y_32 + (abs(tblt.y_32-tblt.y_50)/2 - 1),...
             tblt.y_33 + (abs(tblt.y_33-tblt.y_51)/2 - 1),...
             tblt.y_34 + (abs(tblt.y_34-tblt.y_52)/2 - 1),...
             tblt.y_35,...
             tblt.y_28];
        mtxt = coord2matrix(x, y, 0.86);
        mtx  = mtx + mtxt;
    
        % forehead region
        x = [tblt.x_17 - abs(tblt.x_17-tblt.x_0)/2,...
             tblt.x_18,...
             tblt.x_19,...
             tblt.x_20,...
             tblt.x_21,...
             tblt.x_27 - (abs(tblt.x_27-tblt.x_39)/2 - 1),...
             tblt.x_27 + (abs(tblt.x_27-tblt.x_42)/2 - 1),...
             tblt.x_22,...
             tblt.x_23,...
             tblt.x_24,...
             tblt.x_25,...
             tblt.x_26 + abs(tblt.x_26-tblt.x_16)/2,...
             tblt.x_24,...
             tblt.x_19];
        y = [tblt.y_17,...
             tblt.y_18 + (abs(tblt.y_18-tblt.y_37)/2 - 1),...
             tblt.y_19 + (abs(tblt.y_19-tblt.y_37)/2 - 1),...
             tblt.y_20 + (abs(tblt.y_20-tblt.y_38)/2 - 1),...
             tblt.y_21 + (abs(tblt.y_21-tblt.y_38)/2 - 1),...
             tblt.y_27,...
             tblt.y_27,...
             tblt.y_22 + (abs(tblt.y_22-tblt.y_43)/2 - 1),...
             tblt.y_23 + (abs(tblt.y_23-tblt.y_43)/2 - 1),...
             tblt.y_24 + (abs(tblt.y_24-tblt.y_44)/2 - 1),...
             tblt.y_25 + (abs(tblt.y_25-tblt.y_44)/2 - 1),...
             tblt.y_26,...
             tblt.y_24 - abs(tblt.y_24-tblt.y_28),...
             tblt.y_19 - abs(tblt.y_19-tblt.y_28)];
        mtxt = coord2matrix(x, y, 0.88);
        mtx  = mtx + mtxt; 
    
        % deal with possible overlaps
        mtx(mtx == (0.88 + 0.81)) = 0.81; % forehead + eye = eye region
        mtx(mtx == (0.84 + 0.86)) = 0.84; % nose + mouth = mouth region
    
        % if there are still overlaps, throw an error
        if max(mtx, [], 'all') > 1
            error("Still overlap: %.2f", max(mtx, [], 'all'))
        end
    
        % add the size of the AOI to the matrix
        mtx_size(i,1) = sum(mtx(:) == 0.81);
        mtx_size(i,2) = sum(mtx(:) == 0.84);
        mtx_size(i,3) = sum(mtx(:) == 0.86);
        mtx_size(i,4) = sum(mtx(:) == 0.88);
    
        % add the matrix to the larger aoi matrix
        mtx_aois(:,:,i) = rot90(mtx,2);
    
    end
    
    % create a table with AOI sizes
    tbl_size = array2table(mtx_size, 'VariableNames', {'eyes', 'mouth', 'nose', 'forehead'});
    
    % save everything for this video
    save(['VidStimProcessed' filesep vid '.mat'], "mtx_aois", "tbl_size");

end
